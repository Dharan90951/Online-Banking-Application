version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: banking-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: banking
      MYSQL_USER: bankinguser
      MYSQL_PASSWORD: bankingpassword
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - banking-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ../backend
      dockerfile: ../docker/backend.Dockerfile
    container_name: banking-backend
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/banking?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: bankinguser
      SPRING_DATASOURCE_PASSWORD: bankingpassword
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    networks:
      - banking-network

  # React Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/frontend.Dockerfile
    container_name: banking-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - banking-network
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api

networks:
  banking-network:
    driver: bridge

volumes:
  mysql-data: